//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace SimpleChat.InterfaceCollection
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using SimpleChat.InterfaceCollection;
    using Orleans;
    using Orleans.Runtime;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ChannelFactory
    {
        

                        public static SimpleChat.InterfaceCollection.IChannel GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(SimpleChat.InterfaceCollection.IChannel), 836548923, primaryKey));
                        }

                        public static SimpleChat.InterfaceCollection.IChannel GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(SimpleChat.InterfaceCollection.IChannel), 836548923, primaryKey, grainClassNamePrefix));
                        }

            public static SimpleChat.InterfaceCollection.IChannel Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ChannelReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("SimpleChat.InterfaceCollection.SimpleChat.InterfaceCollection.IChannel")]
        internal class ChannelReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, SimpleChat.InterfaceCollection.IChannel
        {
            

            public static SimpleChat.InterfaceCollection.IChannel Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (SimpleChat.InterfaceCollection.IChannel) global::Orleans.Runtime.GrainReference.CastInternal(typeof(SimpleChat.InterfaceCollection.IChannel), (global::Orleans.Runtime.GrainReference gr) => { return new ChannelReference(gr);}, grainRef, 836548923);
            }
            
            protected internal ChannelReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ChannelReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 836548923;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "SimpleChat.InterfaceCollection.SimpleChat.InterfaceCollection.IChannel";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ChannelReference input = ((ChannelReference)(original));
                return ((ChannelReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ChannelReference input = ((ChannelReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ChannelReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ChannelMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.List<string>> SimpleChat.InterfaceCollection.IChannel.GetUsers()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.List<System.String>>(970251112, new object[] {} );
            }
            
            System.Threading.Tasks.Task SimpleChat.InterfaceCollection.IChannel.AddMessage(SimpleChat.InterfaceCollection.Message @message)
            {

                return base.InvokeMethodAsync<object>(-674258509, new object[] {@message} );
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleChat.InterfaceCollection.Message>> SimpleChat.InterfaceCollection.IChannel.GetMessages()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.List<SimpleChat.InterfaceCollection.Message>>(1887469791, new object[] {} );
            }
            
            System.Threading.Tasks.Task SimpleChat.InterfaceCollection.IChannel.Join(string @user)
            {

                return base.InvokeMethodAsync<object>(772308918, new object[] {@user} );
            }
            
            System.Threading.Tasks.Task SimpleChat.InterfaceCollection.IChannel.SubscribeForUpdates(SimpleChat.InterfaceCollection.IChatViewer @viewer)
            {
global::Orleans.CodeGeneration.GrainFactoryBase.CheckGrainObserverParamInternal(@viewer);

                return base.InvokeMethodAsync<object>(-1739587355, new object[] {@viewer is global::Orleans.Grain ? SimpleChat.InterfaceCollection.ChatViewerFactory.Cast(@viewer.AsReference()) : @viewer} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("SimpleChat.InterfaceCollection.SimpleChat.InterfaceCollection.IChannel", 836548923)]
    internal class ChannelMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 836548923;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 836548923:  // IChannel
                        switch (methodId)
                        {
                            case 970251112: 
                                return ((IChannel)grain).GetUsers().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -674258509: 
                                return ((IChannel)grain).AddMessage((Message)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 1887469791: 
                                return ((IChannel)grain).GetMessages().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 772308918: 
                                return ((IChannel)grain).Join((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1739587355: 
                                return ((IChannel)grain).SubscribeForUpdates((IChatViewer)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 836548923:  // IChannel
                    switch (methodId)
                    {
                        case 970251112:
                            return "GetUsers";
                    case -674258509:
                            return "AddMessage";
                    case 1887469791:
                            return "GetMessages";
                    case 772308918:
                            return "Join";
                    case -1739587355:
                            return "SubscribeForUpdates";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ChatViewerFactory
    {
        

            public static SimpleChat.InterfaceCollection.IChatViewer Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ChatViewerReference.Cast(grainRef);
            }

        private static global::Orleans.CodeGeneration.IGrainMethodInvoker methodInvoker;

        public async static System.Threading.Tasks.Task<SimpleChat.InterfaceCollection.IChatViewer> CreateObjectReference(SimpleChat.InterfaceCollection.IChatViewer obj)
        {
            if (methodInvoker == null) methodInvoker = new ChatViewerMethodInvoker();
            return ChatViewerFactory.Cast(await global::Orleans.Runtime.GrainReference.CreateObjectReference(obj, methodInvoker));
        }

        public static System.Threading.Tasks.Task DeleteObjectReference(SimpleChat.InterfaceCollection.IChatViewer reference)
        {
            return global::Orleans.Runtime.GrainReference.DeleteObjectReference(reference);
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("SimpleChat.InterfaceCollection.SimpleChat.InterfaceCollection.IChatViewer")]
        internal class ChatViewerReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, SimpleChat.InterfaceCollection.IChatViewer
        {
            

            public static SimpleChat.InterfaceCollection.IChatViewer Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (SimpleChat.InterfaceCollection.IChatViewer) global::Orleans.Runtime.GrainReference.CastInternal(typeof(SimpleChat.InterfaceCollection.IChatViewer), (global::Orleans.Runtime.GrainReference gr) => { return new ChatViewerReference(gr);}, grainRef, 952167571);
            }
            
            protected internal ChatViewerReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ChatViewerReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 952167571;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "SimpleChat.InterfaceCollection.SimpleChat.InterfaceCollection.IChatViewer";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ChatViewerReference input = ((ChatViewerReference)(original));
                return ((ChatViewerReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ChatViewerReference input = ((ChatViewerReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ChatViewerReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ChatViewerMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            void SimpleChat.InterfaceCollection.IChatViewer.Update(SimpleChat.InterfaceCollection.Message @latestMessage, string @channel)
            {

                base.InvokeOneWayMethod(-507613618, new object[] {@latestMessage, @channel} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("SimpleChat.InterfaceCollection.SimpleChat.InterfaceCollection.IChatViewer", 952167571)]
    internal class ChatViewerMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 952167571;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 952167571:  // IChatViewer
                        switch (methodId)
                        {
                            case -507613618: 
                                ((IChatViewer)grain).Update((Message)arguments[0], (String)arguments[1]); return System.Threading.Tasks.Task.FromResult((object)true);
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 952167571:  // IChatViewer
                    switch (methodId)
                    {
                        case -507613618:
                            return "Update";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class UserFactory
    {
        

                        public static SimpleChat.InterfaceCollection.IUser GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(SimpleChat.InterfaceCollection.IUser), 1049568532, primaryKey));
                        }

                        public static SimpleChat.InterfaceCollection.IUser GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(SimpleChat.InterfaceCollection.IUser), 1049568532, primaryKey, grainClassNamePrefix));
                        }

            public static SimpleChat.InterfaceCollection.IUser Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return UserReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("SimpleChat.InterfaceCollection.SimpleChat.InterfaceCollection.IUser")]
        internal class UserReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, SimpleChat.InterfaceCollection.IUser
        {
            

            public static SimpleChat.InterfaceCollection.IUser Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (SimpleChat.InterfaceCollection.IUser) global::Orleans.Runtime.GrainReference.CastInternal(typeof(SimpleChat.InterfaceCollection.IUser), (global::Orleans.Runtime.GrainReference gr) => { return new UserReference(gr);}, grainRef, 1049568532);
            }
            
            protected internal UserReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal UserReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 1049568532;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "SimpleChat.InterfaceCollection.SimpleChat.InterfaceCollection.IUser";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                UserReference input = ((UserReference)(original));
                return ((UserReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                UserReference input = ((UserReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return UserReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return UserMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task SimpleChat.InterfaceCollection.IUser.SendMessage(string @channel, SimpleChat.InterfaceCollection.Message @message)
            {

                return base.InvokeMethodAsync<object>(202660795, new object[] {@channel, @message} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("SimpleChat.InterfaceCollection.SimpleChat.InterfaceCollection.IUser", 1049568532)]
    internal class UserMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 1049568532;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 1049568532:  // IUser
                        switch (methodId)
                        {
                            case 202660795: 
                                return ((IUser)grain).SendMessage((String)arguments[0], (Message)arguments[1]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 1049568532:  // IUser
                    switch (methodId)
                    {
                        case 202660795:
                            return "SendMessage";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class SimpleChat_InterfaceCollection_MessageSerialization
    {
        
        static SimpleChat_InterfaceCollection_MessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            SimpleChat.InterfaceCollection.Message input = ((SimpleChat.InterfaceCollection.Message)(original));
            SimpleChat.InterfaceCollection.Message result = new SimpleChat.InterfaceCollection.Message();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Content = input.Content;
            result.Created = input.Created;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            SimpleChat.InterfaceCollection.Message input = ((SimpleChat.InterfaceCollection.Message)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Content, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Created, stream, typeof(System.DateTime));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            SimpleChat.InterfaceCollection.Message result = new SimpleChat.InterfaceCollection.Message();
            result.Content = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Created = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(SimpleChat.InterfaceCollection.Message), DeepCopier, Serializer, Deserializer);
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
